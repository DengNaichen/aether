services:
  # service 1: Python Backend API
  web:
    build:
      context: .
    # use .env file to set the environment parameter
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    # ensure the database start before the backend
    depends_on:
      db:
        condition: service_healthy
      neo4j:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.18.1
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_initial_dbms_default__database: ${NEO4J_initial_dbms_default__database}
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "localhost:7474" ]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  neo4j_data:
