{"version":3,"file":"dist-DK6BwQZU.js","names":["descriptor","value","mock","Map","Object","Array"],"sources":["../../../../../@vitest/mocker/dist/chunk-registry.js","../../../../../@vitest/mocker/dist/index.js"],"sourcesContent":["class MockerRegistry {\n\tregistryByUrl = new Map();\n\tregistryById = new Map();\n\tclear() {\n\t\tthis.registryByUrl.clear();\n\t\tthis.registryById.clear();\n\t}\n\tkeys() {\n\t\treturn this.registryByUrl.keys();\n\t}\n\tadd(mock) {\n\t\tthis.registryByUrl.set(mock.url, mock);\n\t\tthis.registryById.set(mock.id, mock);\n\t}\n\tregister(typeOrEvent, raw, id, url, factoryOrRedirect) {\n\t\tconst type = typeof typeOrEvent === \"object\" ? typeOrEvent.type : typeOrEvent;\n\t\tif (typeof typeOrEvent === \"object\") {\n\t\t\tconst event = typeOrEvent;\n\t\t\tif (event instanceof AutomockedModule || event instanceof AutospiedModule || event instanceof ManualMockedModule || event instanceof RedirectedModule) {\n\t\t\t\tthrow new TypeError(`[vitest] Cannot register a mock that is already defined. ` + `Expected a JSON representation from \\`MockedModule.toJSON\\`, instead got \"${event.type}\". ` + `Use \"registry.add()\" to update a mock instead.`);\n\t\t\t}\n\t\t\tif (event.type === \"automock\") {\n\t\t\t\tconst module = AutomockedModule.fromJSON(event);\n\t\t\t\tthis.add(module);\n\t\t\t\treturn module;\n\t\t\t} else if (event.type === \"autospy\") {\n\t\t\t\tconst module = AutospiedModule.fromJSON(event);\n\t\t\t\tthis.add(module);\n\t\t\t\treturn module;\n\t\t\t} else if (event.type === \"redirect\") {\n\t\t\t\tconst module = RedirectedModule.fromJSON(event);\n\t\t\t\tthis.add(module);\n\t\t\t\treturn module;\n\t\t\t} else if (event.type === \"manual\") {\n\t\t\t\tthrow new Error(`Cannot set serialized manual mock. Define a factory function manually with \\`ManualMockedModule.fromJSON()\\`.`);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Unknown mock type: ${event.type}`);\n\t\t\t}\n\t\t}\n\t\tif (typeof raw !== \"string\") {\n\t\t\tthrow new TypeError(\"[vitest] Mocks require a raw string.\");\n\t\t}\n\t\tif (typeof url !== \"string\") {\n\t\t\tthrow new TypeError(\"[vitest] Mocks require a url string.\");\n\t\t}\n\t\tif (typeof id !== \"string\") {\n\t\t\tthrow new TypeError(\"[vitest] Mocks require an id string.\");\n\t\t}\n\t\tif (type === \"manual\") {\n\t\t\tif (typeof factoryOrRedirect !== \"function\") {\n\t\t\t\tthrow new TypeError(\"[vitest] Manual mocks require a factory function.\");\n\t\t\t}\n\t\t\tconst mock = new ManualMockedModule(raw, id, url, factoryOrRedirect);\n\t\t\tthis.add(mock);\n\t\t\treturn mock;\n\t\t} else if (type === \"automock\" || type === \"autospy\") {\n\t\t\tconst mock = type === \"automock\" ? new AutomockedModule(raw, id, url) : new AutospiedModule(raw, id, url);\n\t\t\tthis.add(mock);\n\t\t\treturn mock;\n\t\t} else if (type === \"redirect\") {\n\t\t\tif (typeof factoryOrRedirect !== \"string\") {\n\t\t\t\tthrow new TypeError(\"[vitest] Redirect mocks require a redirect string.\");\n\t\t\t}\n\t\t\tconst mock = new RedirectedModule(raw, id, url, factoryOrRedirect);\n\t\t\tthis.add(mock);\n\t\t\treturn mock;\n\t\t} else {\n\t\t\tthrow new Error(`[vitest] Unknown mock type: ${type}`);\n\t\t}\n\t}\n\tdelete(id) {\n\t\tthis.registryByUrl.delete(id);\n\t}\n\tget(id) {\n\t\treturn this.registryByUrl.get(id);\n\t}\n\tgetById(id) {\n\t\treturn this.registryById.get(id);\n\t}\n\thas(id) {\n\t\treturn this.registryByUrl.has(id);\n\t}\n}\nclass AutomockedModule {\n\ttype = \"automock\";\n\tconstructor(raw, id, url) {\n\t\tthis.raw = raw;\n\t\tthis.id = id;\n\t\tthis.url = url;\n\t}\n\tstatic fromJSON(data) {\n\t\treturn new AutospiedModule(data.raw, data.id, data.url);\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\traw: this.raw,\n\t\t\tid: this.id\n\t\t};\n\t}\n}\nclass AutospiedModule {\n\ttype = \"autospy\";\n\tconstructor(raw, id, url) {\n\t\tthis.raw = raw;\n\t\tthis.id = id;\n\t\tthis.url = url;\n\t}\n\tstatic fromJSON(data) {\n\t\treturn new AutospiedModule(data.raw, data.id, data.url);\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tid: this.id,\n\t\t\traw: this.raw\n\t\t};\n\t}\n}\nclass RedirectedModule {\n\ttype = \"redirect\";\n\tconstructor(raw, id, url, redirect) {\n\t\tthis.raw = raw;\n\t\tthis.id = id;\n\t\tthis.url = url;\n\t\tthis.redirect = redirect;\n\t}\n\tstatic fromJSON(data) {\n\t\treturn new RedirectedModule(data.raw, data.id, data.url, data.redirect);\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\traw: this.raw,\n\t\t\tid: this.id,\n\t\t\tredirect: this.redirect\n\t\t};\n\t}\n}\nclass ManualMockedModule {\n\tcache;\n\ttype = \"manual\";\n\tconstructor(raw, id, url, factory) {\n\t\tthis.raw = raw;\n\t\tthis.id = id;\n\t\tthis.url = url;\n\t\tthis.factory = factory;\n\t}\n\tasync resolve() {\n\t\tif (this.cache) {\n\t\t\treturn this.cache;\n\t\t}\n\t\tlet exports;\n\t\ttry {\n\t\t\texports = await this.factory();\n\t\t} catch (err) {\n\t\t\tconst vitestError = new Error(\"[vitest] There was an error when mocking a module. \" + \"If you are using \\\"vi.mock\\\" factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. \" + \"Read more: https://vitest.dev/api/vi.html#vi-mock\");\n\t\t\tvitestError.cause = err;\n\t\t\tthrow vitestError;\n\t\t}\n\t\tif (exports === null || typeof exports !== \"object\" || Array.isArray(exports)) {\n\t\t\tthrow new TypeError(`[vitest] vi.mock(\"${this.raw}\", factory?: () => unknown) is not returning an object. Did you mean to return an object with a \"default\" key?`);\n\t\t}\n\t\treturn this.cache = exports;\n\t}\n\tstatic fromJSON(data, factory) {\n\t\treturn new ManualMockedModule(data.raw, data.id, data.url, factory);\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tid: this.id,\n\t\t\traw: this.raw\n\t\t};\n\t}\n}\n\nexport { AutomockedModule as A, MockerRegistry as M, RedirectedModule as R, ManualMockedModule as a, AutospiedModule as b };\n","export { A as AutomockedModule, b as AutospiedModule, a as ManualMockedModule, M as MockerRegistry, R as RedirectedModule } from './chunk-registry.js';\n\nfunction mockObject(options, object, mockExports = {}) {\n\tconst finalizers = new Array();\n\tconst refs = new RefTracker();\n\tconst define = (container, key, value) => {\n\t\ttry {\n\t\t\tcontainer[key] = value;\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t};\n\tconst mockPropertiesOf = (container, newContainer) => {\n\t\tconst containerType = getType(container);\n\t\tconst isModule = containerType === \"Module\" || !!container.__esModule;\n\t\tfor (const { key: property, descriptor } of getAllMockableProperties(container, isModule, options.globalConstructors)) {\n\t\t\t// Modules define their exports as getters. We want to process those.\n\t\t\tif (!isModule && descriptor.get) {\n\t\t\t\ttry {\n\t\t\t\t\tObject.defineProperty(newContainer, property, descriptor);\n\t\t\t\t} catch {}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Skip special read-only props, we don't want to mess with those.\n\t\t\tif (isSpecialProp(property, containerType)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst value = container[property];\n\t\t\t// Special handling of references we've seen before to prevent infinite\n\t\t\t// recursion in circular objects.\n\t\t\tconst refId = refs.getId(value);\n\t\t\tif (refId !== undefined) {\n\t\t\t\tfinalizers.push(() => define(newContainer, property, refs.getMockedValue(refId)));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst type = getType(value);\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdefine(newContainer, property, []);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst isFunction = type.includes(\"Function\") && typeof value === \"function\";\n\t\t\tif ((!isFunction || value._isMockFunction) && type !== \"Object\" && type !== \"Module\") {\n\t\t\t\tdefine(newContainer, property, value);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Sometimes this assignment fails for some unknown reason. If it does,\n\t\t\t// just move along.\n\t\t\tif (!define(newContainer, property, isFunction ? value : {})) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isFunction) {\n\t\t\t\tif (!options.spyOn) {\n\t\t\t\t\tthrow new Error(\"[@vitest/mocker] `spyOn` is not defined. This is a Vitest error. Please open a new issue with reproduction.\");\n\t\t\t\t}\n\t\t\t\tconst spyOn = options.spyOn;\n\t\t\t\tfunction mockFunction() {\n\t\t\t\t\t// detect constructor call and mock each instance's methods\n\t\t\t\t\t// so that mock states between prototype/instances don't affect each other\n\t\t\t\t\t// (jest reference https://github.com/jestjs/jest/blob/2c3d2409879952157433de215ae0eee5188a4384/packages/jest-mock/src/index.ts#L678-L691)\n\t\t\t\t\tif (this instanceof newContainer[property]) {\n\t\t\t\t\t\tfor (const { key, descriptor } of getAllMockableProperties(this, false, options.globalConstructors)) {\n\t\t\t\t\t\t\t// skip getter since it's not mocked on prototype as well\n\t\t\t\t\t\t\tif (descriptor.get) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst value = this[key];\n\t\t\t\t\t\t\tconst type = getType(value);\n\t\t\t\t\t\t\tconst isFunction = type.includes(\"Function\") && typeof value === \"function\";\n\t\t\t\t\t\t\tif (isFunction) {\n\t\t\t\t\t\t\t\t// mock and delegate calls to original prototype method, which should be also mocked already\n\t\t\t\t\t\t\t\tconst original = this[key];\n\t\t\t\t\t\t\t\tconst mock = spyOn(this, key).mockImplementation(original);\n\t\t\t\t\t\t\t\tconst origMockReset = mock.mockReset;\n\t\t\t\t\t\t\t\tmock.mockRestore = mock.mockReset = () => {\n\t\t\t\t\t\t\t\t\torigMockReset.call(mock);\n\t\t\t\t\t\t\t\t\tmock.mockImplementation(original);\n\t\t\t\t\t\t\t\t\treturn mock;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst mock = spyOn(newContainer, property);\n\t\t\t\tif (options.type === \"automock\") {\n\t\t\t\t\tmock.mockImplementation(mockFunction);\n\t\t\t\t\tconst origMockReset = mock.mockReset;\n\t\t\t\t\tmock.mockRestore = mock.mockReset = () => {\n\t\t\t\t\t\torigMockReset.call(mock);\n\t\t\t\t\t\tmock.mockImplementation(mockFunction);\n\t\t\t\t\t\treturn mock;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// tinyspy retains length, but jest doesn't.\n\t\t\t\tObject.defineProperty(newContainer[property], \"length\", { value: 0 });\n\t\t\t}\n\t\t\trefs.track(value, newContainer[property]);\n\t\t\tmockPropertiesOf(value, newContainer[property]);\n\t\t}\n\t};\n\tconst mockedObject = mockExports;\n\tmockPropertiesOf(object, mockedObject);\n\t// Plug together refs\n\tfor (const finalizer of finalizers) {\n\t\tfinalizer();\n\t}\n\treturn mockedObject;\n}\nclass RefTracker {\n\tidMap = new Map();\n\tmockedValueMap = new Map();\n\tgetId(value) {\n\t\treturn this.idMap.get(value);\n\t}\n\tgetMockedValue(id) {\n\t\treturn this.mockedValueMap.get(id);\n\t}\n\ttrack(originalValue, mockedValue) {\n\t\tconst newId = this.idMap.size;\n\t\tthis.idMap.set(originalValue, newId);\n\t\tthis.mockedValueMap.set(newId, mockedValue);\n\t\treturn newId;\n\t}\n}\nfunction getType(value) {\n\treturn Object.prototype.toString.apply(value).slice(8, -1);\n}\nfunction isSpecialProp(prop, parentType) {\n\treturn parentType.includes(\"Function\") && typeof prop === \"string\" && [\n\t\t\"arguments\",\n\t\t\"callee\",\n\t\t\"caller\",\n\t\t\"length\",\n\t\t\"name\"\n\t].includes(prop);\n}\nfunction getAllMockableProperties(obj, isModule, constructors) {\n\tconst { Map, Object, Function, RegExp, Array } = constructors;\n\tconst allProps = new Map();\n\tlet curr = obj;\n\tdo {\n\t\t// we don't need properties from these\n\t\tif (curr === Object.prototype || curr === Function.prototype || curr === RegExp.prototype) {\n\t\t\tbreak;\n\t\t}\n\t\tcollectOwnProperties(curr, (key) => {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(curr, key);\n\t\t\tif (descriptor) {\n\t\t\t\tallProps.set(key, {\n\t\t\t\t\tkey,\n\t\t\t\t\tdescriptor\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} while (curr = Object.getPrototypeOf(curr));\n\t// default is not specified in ownKeys, if module is interoped\n\tif (isModule && !allProps.has(\"default\") && \"default\" in obj) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(obj, \"default\");\n\t\tif (descriptor) {\n\t\t\tallProps.set(\"default\", {\n\t\t\t\tkey: \"default\",\n\t\t\t\tdescriptor\n\t\t\t});\n\t\t}\n\t}\n\treturn Array.from(allProps.values());\n}\nfunction collectOwnProperties(obj, collector) {\n\tconst collect = typeof collector === \"function\" ? collector : (key) => collector.add(key);\n\tObject.getOwnPropertyNames(obj).forEach(collect);\n\tObject.getOwnPropertySymbols(obj).forEach(collect);\n}\n\nexport { mockObject };\n"],"mappings":"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"}