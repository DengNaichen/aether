{"version":3,"file":"semver.js","names":["i","range","comp"],"sources":["../../../../../semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar safeRe = exports.safeRe = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nfunction makeSafeRe (value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0]\n    var max = safeRegexReplacements[i][1]\n    value = value\n      .split(token + '*').join(token + '{0,' + max + '}')\n      .split(token + '+').join(token + '{1,' + max + '}')\n  }\n  return value\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '\\\\d+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\nsafeRe[t.COERCERTL] = new RegExp(makeSafeRe(src[t.COERCE]), 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nsafeRe[t.TILDETRIM] = new RegExp(makeSafeRe(src[t.TILDETRIM]), 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nsafeRe[t.CARETTRIM] = new RegExp(makeSafeRe(src[t.CARETTRIM]), 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nsafeRe[t.COMPARATORTRIM] = new RegExp(makeSafeRe(src[t.COMPARATORTRIM]), 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ')\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range\n    .trim()\n    .split(/\\s+/)\n    .join(' ')\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[t.HYPHENRANGELOOSE] : safeRe[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, safeRe[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? safeRe[t.TILDELOOSE] : safeRe[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? safeRe[t.CARETLOOSE] : safeRe[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? safeRe[t.XRANGELOOSE] : safeRe[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(safeRe[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = safeRe[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      safeRe[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    safeRe[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n"],"mappings":"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"}