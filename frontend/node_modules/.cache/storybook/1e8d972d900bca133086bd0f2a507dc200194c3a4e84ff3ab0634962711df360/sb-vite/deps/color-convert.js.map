{"version":3,"file":"color-convert.js","names":["convert","conversions","models"],"sources":["../../../../../color-name/index.js","../../../../../color-convert/conversions.js","../../../../../color-convert/route.js","../../../../../color-convert/index.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"],"mappings":"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"}